name: Release a New Version of Simple Icons Streamdeck
on:
    push:
    workflow_dispatch:
    schedule:
        - cron: '0 9 * * 1'
jobs:
    version:
        name: Increment Version
        timeout-minutes: 10
        runs-on: ubuntu-latest
        outputs:
            NEW_VERSION: ${{ steps.incrementVersion.outputs.NEW_VERSION }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Read version from manifest.json
              id: manifestJson
              uses: RadovanPelka/github-action-json@main
              with:
                path: 'template/manifest.json'

            - name: Increment version number
              id: incrementVersion
              run: |
                VERSION=$(echo "${{ steps.packageJson.outputs.version }}")
                IFS='.' read -ra VER <<< "$VERSION"
                ((VER[2]++))
                echo "NEW_VERSION=${VER[0]}.${VER[1]}.${VER[2]}" >> $GITHUB_OUTPUT
            
            - name: Set version in manifest.json
              id: packageJson
              uses: RadovanPelka/github-action-json@main
              with:
                path: 'template/manifest.json'
                replaceWith: |
                    {
                        "Version": "${{ steps.incrementVersion.outputs.NEW_VERSION }}"
                    }

            - name: Show version file
              run: |
                cat template/manifest.json

            # TODO: Commit and push changes

    build:
        name: Build Icon Pack
        needs: version
        runs-on: windows-latest
        steps:
            - env:
                NEW_VERSION: ${{ needs.version.outputs.NEW_VERSION }}
              run: |
                echo "NEW_VERSION=${{ env.NEW_VERSION }}" >> $GITHUB_ENV

            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Echo the version # to test variable passing to windows runner
              run: |
                echo "NEW_VERSION=${{ env.NEW_VERSION }}"

    release:
        name: Create new Release
        needs: build
        runs-on: ubuntu-latest
        steps:
            - name: Do nothing
              run: |
                echo "TODO: Create a new release with the new version number"